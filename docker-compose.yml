version: '3.9'

services:
  telegram_bot:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8077:8077"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      BOT_NAME: ${BOT_NAME}
      BOT_TOKEN: ${BOT_TOKEN}
      TELEGRAM_DATASOURCE_URL: jdbc:postgresql://postgres:5432/telegram_bot
      TELEGRAM_DATASOURCE_USERNAME: telegram_bot
      TELEGRAM_DATASOURCE_PASSWORD: p123
      TELEGRAM_RABBITMQ_HOST: rabbitmq
      TELEGRAM_RABBITMQ_PORT: 5672
      TELEGRAM_RABBITMQ_USERNAME: telegram_bot
      TELEGRAM_RABBITMQ_PASSWORD: r123
      TELEGRAM_RABBITMQ_VIRTUAL_HOST: /
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: telegram_bot
      POSTGRES_PASSWORD: p123
      POSTGRES_DB: telegram_bot
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: telegram_bot
      RABBITMQ_DEFAULT_PASS: r123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
volumes:
  postgres-data:
  rabbitmq-lib:
  rabbitmq-log: